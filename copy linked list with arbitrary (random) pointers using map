 Node *copyList(Node *head)
    {
        //Write your code here
        Node*temp=head;
        map<Node*,Node*>m;
        while(temp){
            Node*copy=new Node(temp->data);
            m[temp]=copy;
            temp=temp->next;
        }
        temp=head;
        while(temp){
            m[temp]->next=m[temp->next];
            m[temp]->arb=m[temp->arb];
            temp=temp->next;
        }
        return m[head];
    }
////////////////////////////////////////////////////////below is code of O(1) space ///////////////////////////////////////////
 void copy(Node*head){
        Node*temp=head,*n=head->next;
        while(temp){
            Node* copy=new Node(temp->data);
            temp->next=copy;
            copy->next=n;
            temp=n;
           if(n) n=n->next;
        }
       
    }
   
    void handlerandom(Node*head){
        Node* temp=head;
        while(temp){
       if(temp->arb) temp->next->arb=temp->arb->next;
      if(temp->next) temp=temp->next->next;
        }
    }
    Node* detach(Node* head){
        Node* dummy=new Node(-1);
        
        Node* tail=dummy;
        Node* temp=head;
        while(temp){
            tail->next=temp->next;
            tail=tail->next;
            temp->next=tail->next;
            temp=temp->next;
            
           
        }
        return dummy->next;
    }
    Node *copyList(Node *head)
    {
        //Write your code here
        copy(head);
      
        handlerandom(head);
       
        Node* r=detach(head);
        
   
        return r;
        
    }
