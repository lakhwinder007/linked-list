class cmp{
    public: 
           bool operator()(Node*a ,Node*b){
                return a->data>b->data;
           };
};
class Solution{
  public:
    //Function to merge K sorted linked list.
    
    Node * mergeKLists(Node *arr[], int K)
    {
           // Your code here
           Node* temp[K];
           for(int i=0;i<K;i++){
               temp[i]=arr[i];
           }
           priority_queue<Node*,vector<Node*>,cmp>pq;
           for(auto i=0;i<K;i++){
               temp[i]=arr[i];
               pq.push(arr[i]);
               
               if(arr[i]!=NULL)temp[i]=temp[i]->next;
               
           }
           Node*result=new Node(-1);
           Node*ans =result;
           while(!pq.empty()){
               Node* d=pq.top();
               pq.pop();
               ans->next=d;
               ans=ans->next;
               if(d->next!=NULL)pq.push(d->next);
           }
           return result->next;
    }
};
